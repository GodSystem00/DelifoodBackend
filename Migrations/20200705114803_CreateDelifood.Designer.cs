// <auto-generated />
using System;
using Delifood.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Delifood.Migrations
{
    [DbContext(typeof(DelifoodContext))]
    [Migration("20200705114803_CreateDelifood")]
    partial class CreateDelifood
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Delifood.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteID");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Delifood.Models.Compra", b =>
                {
                    b.Property<int>("CompraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConBoleta")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConFactura")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Importe")
                        .HasColumnType("REAL");

                    b.Property<bool>("SoloEfectivo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("codigo")
                        .HasColumnType("TEXT");

                    b.HasKey("CompraID");

                    b.HasIndex("ClienteID");

                    b.ToTable("compras");
                });

            modelBuilder.Entity("Delifood.Models.CompraMercado", b =>
                {
                    b.Property<int>("CompraMercadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MercadoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompraMercadoID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("CompraID");

                    b.HasIndex("MercadoID");

                    b.ToTable("compramercados");
                });

            modelBuilder.Entity("Delifood.Models.Mercado", b =>
                {
                    b.Property<int>("MercadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<float>("latitud")
                        .HasColumnType("REAL");

                    b.Property<float>("longitud")
                        .HasColumnType("REAL");

                    b.HasKey("MercadoID");

                    b.ToTable("mercados");
                });

            modelBuilder.Entity("Delifood.Models.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendedorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("categoria")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoID");

                    b.HasIndex("VendedorID");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("Delifood.Models.Vendedor", b =>
                {
                    b.Property<int>("VendedorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DNI")
                        .HasColumnType("TEXT");

                    b.Property<int>("MercadoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("VendedorID");

                    b.ToTable("vendedors");
                });

            modelBuilder.Entity("Delifood.Models.Compra", b =>
                {
                    b.HasOne("Delifood.Models.Cliente", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Delifood.Models.CompraMercado", b =>
                {
                    b.HasOne("Delifood.Models.Cliente", null)
                        .WithMany("CompraMercados")
                        .HasForeignKey("ClienteID");

                    b.HasOne("Delifood.Models.Compra", "Compra")
                        .WithMany()
                        .HasForeignKey("CompraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Delifood.Models.Mercado", "Mercado")
                        .WithMany("CompraMercados")
                        .HasForeignKey("MercadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Delifood.Models.Producto", b =>
                {
                    b.HasOne("Delifood.Models.Vendedor", "Vendedor")
                        .WithMany("Productos")
                        .HasForeignKey("VendedorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
